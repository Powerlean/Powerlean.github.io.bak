#!/bin/bash -e
#(C)Code by Solaris Eco 2020
#Blog:https://edges5352.github.io
#Email:bluebreeze191@gamil.com
#GitHub:EdgeS5352 (Solaris Eco)
#coding:UTF-8


#some path
export bin="$PREFIX/bin/"
export output="/dev/null/"
export import_list="$PREFIX/bin/coraph.conf"
export base="~/coraph/"


#some color
yellow="\033[33m"
red="\033[31m"
green="\033[32m"
suffix="\033[0m"


#import some argument
if [ -f $import_list ]; then
  export ubuntu=`sed -n "3,3p" $import_list`
  export arch=`sed -n "6,6p" $import_list`
  export fedora=`sed -n "9,9p" $import_list`
  export centos=`sed -n "12,12p" $import_list`
  export debian=`sed -n "15,15p" $import_list`
  export kali=`sed -n "18,18p" $import_list`
else
  echo "${red} $import_list does not exist! ${suffix}"
  exit "2"
fi


#some tips
export version="v1.6"
export download_tip="echo -e ${green}Downloading Rootfs,this may take some time...${suffix}"
export void_error="echo -e ${red}Please input a effective argument!${suffix}"
export unpack_tip="echo -e ${green}Unpacking,please waiting...${suffix}"
export done_tip="echo -e ${green} Process done! ${suffix} "
export introduce="echo Coraph is a useful tool which can help you to set up some  Linux Distribution in your Termux."


#some links
export update="https://raw.githubusercontent.com/EdgeS5352/Coraph/master/state-up.sh"
export log="https://raw.githubusercontent.com/EdgeS5352/Coraph/master/list.log"
export ubuntu_link="wget ${ubuntu}"
export arch_link="wget ${arch}"
export fedora_link="wget ${fedora}"
export centos_link="wget ${centos}"
export debian_link="wget ${debian}"
export kali_link="wget ${kali}"


#some function
function check_exist {
if [ -f "$bin$2" ]; then
  echo -e "${red} You are been installed this DISTRIBUTION! ${suffix}"
  exit "2"
fi
}

function logo {
clear
echo -e "${yellow}                ____                      _                ${suffix}"
echo -e "${yellow}               / ___|___  _ __ __ _ _ __ | |__             ${suffix}"
echo -e "${yellow}              | |   / _ \|  __/ _  |  _ \|   _ \           ${suffix}"
echo -e "${yellow}              | |__| (_) | | | (_| | |_) | | | |           ${suffix}"
echo -e "${yellow}               \____\___/|_|  \__,_| .__/|_| |_|           ${suffix}"
echo -e "${yellow}                              |_|         ${version} ${suffix}"
echo ""
echo "                          https://github.com/EdgeS5352/Coraph"
echo ""
echo ""
bash -c "$(curl -fsSL https://raw.githubusercontent.com/EdgeS5352/Coraph/master/update.log)"
}


#do you have proot?
proot=`which proot`
if [ x"$proot" = x ]; then
  echo "${green} Installing proot... ${suffix}"
  apt install proot -y 1>"$output" 2>&1
fi


#move
function rename { 
mv rootfs.tar.xz ${2}.tar.xz 
mv ${2}.tar.xz /data/data/com.termux/files/home
}


#haven't input
if [ x"$1" == x ]; then
  logo
  ${introduce}


#install a system
elif [ $1 == "deploy" -o $1 == "d" ]; then
  case $2 in
  "ubuntu")
  logo
  check_exist
  ${download_tip}
  ${ubuntu_link}
  ;;  
  "arch")
  logo
  check_exist
  ${download_tip}
  ${arch_link}
  ;;
  "fedora")
  logo
  check_exist
  ${download_tip}
  ${fedora_link}
  ;;
  "centos")
  logo
  check_exist
  ${download_tip}
  ${centos_link}
  ;;
  "debian")
  logo
  check_exist
  ${download_tip}
  ${debian_link}
  ;;
  "kali")
  logo
  check_exist
  ${download_tip}
  ${kali_link}
  ;;
  *)
  ${void_error}
  exit "2"
  esac
  

  #Global setting
  rename ${1} ${2}
function set-up {
  mkdir ~/.coraph 
  mv $2.tar.xz ~/.coraph/
  cd ~/.coraph/
  ${unpack_tip}
  xz -d $2.tar.xz
  tar -xvf $2.tar
  echo -e "${green} Start to remove compression package... ${suffix}"
  rm ~/.coraph/$2.tar
  echo -e "${green} Write launch script in $bin$2 ${suffix}"
  cd $PREFIX/bin
  touch $2
  echo -e "${green} Chinese(zh_CN) ${suffix}"  
  echo -e "${green} English(C) ${suffix}"
  read -p "which is your language (cn/en)：" lang
  if [ $lang == "cn" ]; then
    setting="zh_CN.UTF-8"
  elif [ $lang == "en" ]; then
    setting="C.UTF-8"
  else
    ${void_error}
  fi 
}
set-up
  
  
  #Write script
  dir="~/.coraph/$2"
  echo -e "#! /bin/bash\nunset LD_PRELOAD\nproot --link2symlink -S ${dir} -b /sys -b /dev -b /proc -b ~/ -w /root /usr/bin/env -i HOME=/root LANG=${setting} PATH=/bin:/usr/bin:/sbin:/usr/sbin:/usr/local/bin:/usr/local/sbin TERM=xterm-256color /bin/bash --login" > "$bin$2"
  chmod +x $bin$2
  ${done_tip}
  echo -e "${green} Now you can launch $2 with command [$2]. ${suffix}"
  exit "0"


#remove a system
elif [ $1 == "remove" -o $1 == "r" ]; then
  logo
  read -p "Are you sure you want to remove $2 (y/n)：" chose
  if [ $chose == "Y" -o $chose == "y" ]; then    
    echo "${green} Start to remove $2... ${suffix}"
    if [ x"$2" == x ]; then
      ${void_error}
      exit "2"
    fi
    if [ -f "$base$2" ]; then
    rm -rf $base$2
    else
    echo "${red} You didn't install $2! ${suffix}"
    fi
    rm -rf $bin$2
    ${done_tip}
  elif [ $chose == "N" -o $chose == "n" ]; then
    echo -e "${green} abort. ${suffix}"
    exit "0"
  else
    echo -e "${red} Command not found. ${suffix}"
  fi


#help info
elif [ $1 == "help" -o $1 == "h" ]; then
  echo "Coraph          ${version}"
  echo "Usage: coraph [command] [argument]"
  echo ""
  ${introduce}
  echo ""
  echo "Command:"
  echo -e "${yellow}d${suffix}eploy          to install a Linux distribution which you need"
  echo -e "${yellow}r${suffix}emove          delete a existing Linux distribution"
  echo -e "${yellow}u${suffix}pdate          get the latest version of Coraph"
  echo -e "${yellow}l${suffix}ist            list all of rootfs which can be support"
  echo -e "${yellow}h${suffix}elp            get some help"


#list rootfs
elif [ $1 == "list" -o $1 == "l" ]; then
  bash -c "$(curl -fsSL $log)"


#get update
elif [ $1 == "update" -o $1 == "u" ]; then
  echo -e "${green} Start to update... ${suffix}"
  bash -c "$(curl -fsSL $update)" 1>"$output" 2>&1


#error input
else
${void_error}
fi
